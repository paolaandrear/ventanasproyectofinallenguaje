/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.eam.lenguaje.universidad.vistas;

import co.edu.eam.lenguaje.universidad.modelo.Curso;
import co.edu.eam.lenguaje.universidad.modelo.Docente;
import co.edu.eam.lenguaje.universidad.modelo.Estudiante;
import co.edu.eam.lenguaje.universidad.modelo.Evaluacion;
import co.edu.eam.lenguaje.universidad.modelo.Nota;
import co.edu.eam.lenguaje.universidad.modelo.Registro;
import co.edu.eam.lenguaje.universidad.modelo.Universidad;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class VentanaIngresarNota extends javax.swing.JInternalFrame {

    /**
     * Creates new form VentanaIngresarNota
     */
    private Universidad log;
    Docente buscarDoc;

    public VentanaIngresarNota() {
        initComponents();
        setVisible(true);
        setMaximizable(false);
        setIconifiable(true);
        setClosable(true);
        setResizable(false);
        log = Universidad.getInstance();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfCedulaDocente = new javax.swing.JTextField();
        tfNombreDocente = new javax.swing.JTextField();
        btnBuscarDocente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbCurso = new javax.swing.JComboBox();
        cbCalificacion = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEstudiantes = new javax.swing.JTable();
        btnCrearNota = new javax.swing.JButton();

        setTitle("Ingresar Nota");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/eam/lenguaje/universidad/imagenes/cual.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Docente"));

        jLabel1.setText("Cédula");

        jLabel2.setText("Nombre");

        tfCedulaDocente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCedulaDocenteKeyPressed(evt);
            }
        });

        tfNombreDocente.setEditable(false);

        btnBuscarDocente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/eam/lenguaje/universidad/imagenes/buscar.png"))); // NOI18N
        btnBuscarDocente.setToolTipText("Buscar");
        btnBuscarDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDocenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfCedulaDocente)
                    .addComponent(tfNombreDocente, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnBuscarDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfCedulaDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfNombreDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnBuscarDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Calificaciones"));

        jLabel3.setText("Curso");

        jLabel4.setText("Calificación");

        cbCurso.setToolTipText("");
        cbCurso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCursoItemStateChanged(evt);
            }
        });

        cbCalificacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCalificacionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbCalificacion, 0, 207, Short.MAX_VALUE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/eam/lenguaje/universidad/imagenes/bigcual.png"))); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado Estudiantes"));

        tablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cédula", "Nombre", "Apellido", "Calificación"
            }
        ));
        jScrollPane1.setViewportView(tablaEstudiantes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCrearNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/eam/lenguaje/universidad/imagenes/edit.png"))); // NOI18N
        btnCrearNota.setToolTipText("Calificar");
        btnCrearNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearNotaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel5)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCrearNota, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCrearNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDocenteActionPerformed
        // TODO add your handling code here:
        if (tfCedulaDocente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el codigo de la asignatura");
            return;

        }
        buscarDoc = log.buscarDoc(tfCedulaDocente.getText());
        if (buscarDoc != null) {
            tfNombreDocente.setText(buscarDoc.getNombre());
            List<Curso> cursos = log.listarCursoDocente(buscarDoc);
            llenarComboCursos(cursos);
        } else {
            JOptionPane.showMessageDialog(null, "No se encuentra un docente registrado con documento " + tfCedulaDocente.getText());
            limpiarCampos();
        }

    }//GEN-LAST:event_btnBuscarDocenteActionPerformed

    private void tfCedulaDocenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCedulaDocenteKeyPressed
        validarNumeros(evt);
    }//GEN-LAST:event_tfCedulaDocenteKeyPressed

    private void cbCursoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCursoItemStateChanged
        // TODO add your handling code here:        
        if (cbCurso.getSelectedIndex() == -1 || cbCurso.getSelectedIndex() == 0) {
            limpiarTabla();
            cbCalificacion.removeAllItems();
            return;
        }
        Curso curso = (Curso) cbCurso.getSelectedItem();
        llenarTablaEstudiantes(curso);
        llenarComboEvaluaciones(curso);
    }//GEN-LAST:event_cbCursoItemStateChanged

    private void btnCrearNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearNotaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablaEstudiantes.getModel();
        if (tablaEstudiantes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione el estudiante que desea caificar",
                    "Advertencia", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String cedula = (String) model.getValueAt(tablaEstudiantes.getSelectedRow(), 0);
        Curso cursoActual = (Curso) cbCurso.getSelectedItem();
        Registro registro = cursoActual.buscarRegistro(cedula);
        Evaluacion evalActual = (Evaluacion) cbCalificacion.getSelectedItem();
        Nota nota = registro.buscarNotaPorEvaluacion(evalActual);
        if (nota == null) {
            double valor = Double.parseDouble((String) model.getValueAt(tablaEstudiantes.getSelectedRow(), 3));
            Nota notaActual = new Nota(valor, false, evalActual);
            registro.asignarNota(notaActual);
            JOptionPane.showMessageDialog(null, "Se ha calificado el estudiante");
        } else {
            JOptionPane.showMessageDialog(null, "Ya hay una nota creada para esa evaluación, puede intentar editarla",
                    "Advertencia", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearNotaActionPerformed

    private void cbCalificacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCalificacionItemStateChanged
        // TODO add your handling code here:
        if (cbCalificacion.getSelectedIndex() == -1 || cbCalificacion.getSelectedIndex() == 0) {
            return;
        }
        Evaluacion eval = (Evaluacion) cbCalificacion.getSelectedItem();
        actualizarTablaEstudiantes(eval);
    }//GEN-LAST:event_cbCalificacionItemStateChanged

    private void actualizarTablaEstudiantes(Evaluacion eval) {
        DefaultTableModel model = (DefaultTableModel) tablaEstudiantes.getModel();
        Curso curso = (Curso) cbCurso.getSelectedItem();
        int contador = 0;
        for (Registro registro : curso.getRegistros()) {
            Nota nota = registro.buscarNotaPorEvaluacion(eval);
            if (nota != null) {
                model.setValueAt(nota.getNota(), contador, 3);
            } else {
                model.setValueAt("NC", contador, 3);
            }
            contador++;
        }
    }

    private void llenarComboCursos(List<Curso> cursos) {
        cbCurso.removeAllItems();
        cbCurso.addItem("Seleccione un curso");
        for (Curso curso : cursos) {
            cbCurso.addItem(curso);
        }
    }

    private void llenarComboEvaluaciones(Curso curso) {
        cbCalificacion.removeAllItems();
        cbCalificacion.addItem("Seleccione una evaluación");
        for (Evaluacion eval : curso.getEvaluaciones()) {
            cbCalificacion.addItem(eval);
        }
    }

    private void llenarTablaEstudiantes(Curso curso) {
        DefaultTableModel model = (DefaultTableModel) tablaEstudiantes.getModel();
        model.setRowCount(0);
        for (Registro registro : curso.getRegistros()) {
            Estudiante est = registro.getEstudiante();
            model.addRow(new Object[]{est.getDocumento(), est.getNombre(), est.getApellido(), "NC"});
        }
    }

    private void limpiarTabla() {
        DefaultTableModel model = (DefaultTableModel) tablaEstudiantes.getModel();
        model.setRowCount(0);
    }

    private void validarNumeros(KeyEvent evento) {
        if (Character.isLetter((char) evento.getKeyChar())) {
            JOptionPane.showMessageDialog(null, "este campo no admite letras ");
            evento.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }

    private void limpiarCampos() {
        tfCedulaDocente.setText("");
        tfNombreDocente.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarDocente;
    private javax.swing.JButton btnCrearNota;
    private javax.swing.JComboBox cbCalificacion;
    private javax.swing.JComboBox cbCurso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEstudiantes;
    private javax.swing.JTextField tfCedulaDocente;
    private javax.swing.JTextField tfNombreDocente;
    // End of variables declaration//GEN-END:variables

}
